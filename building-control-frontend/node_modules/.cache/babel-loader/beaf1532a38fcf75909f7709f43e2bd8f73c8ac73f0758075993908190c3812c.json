{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { fetchBuildings, deleteBuilding } from '../services/api';\nimport './BuildingList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  _s();\n  useEffect(() => {\n    const loadBuildings = async () => {\n      const data = await fetchBuildings();\n      setBuildings(data);\n    };\n    loadBuildings();\n  }, [setBuildings]);\n  const handleDelete = async id => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter(building => building.id !== id));\n  };\n  const handleStatusChange = async (id, currentStatus) => {\n    const newStatus = currentStatus === 'Active' ? 'Inactive' : 'Active';\n    await fetch(`/buildings/${id}/command`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: newStatus\n      })\n    });\n    setBuildings(prevBuildings => prevBuildings.map(b => b.id === id ? {\n      ...b,\n      status: newStatus\n    } : b));\n  };\n  const handleTemperatureChange = async (id, newTemperature) => {\n    await fetch(`/buildings/${id}/command`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        temperature: newTemperature\n      })\n    });\n    setBuildings(prevBuildings => prevBuildings.map(b => b.id === id ? {\n      ...b,\n      temperature: newTemperature\n    } : b));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: building.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", building.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", building.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => onEdit(building),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-secondary\",\n          onClick: () => handleDelete(building.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-status\",\n          onClick: () => handleStatusChange(building.id, building.status),\n          children: \"Toggle Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"temperature-input\",\n          value: building.temperature,\n          onChange: e => handleTemperatureChange(building.id, Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, building.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useEffect","fetchBuildings","deleteBuilding","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","loadBuildings","data","handleDelete","id","filter","building","handleStatusChange","currentStatus","newStatus","fetch","method","headers","body","JSON","stringify","status","prevBuildings","map","b","handleTemperatureChange","newTemperature","temperature","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { fetchBuildings, deleteBuilding } from '../services/api';\nimport { Building } from '../types/types';\nimport './BuildingList.css';\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  useEffect(() => {\n    const loadBuildings = async () => {\n      const data = await fetchBuildings();\n      setBuildings(data);\n    };\n    loadBuildings();\n  }, [setBuildings]);\n\n  const handleDelete = async (id: number) => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter((building) => building.id !== id));\n  };\n\n  const handleStatusChange = async (id: number, currentStatus: string) => {\n    const newStatus = currentStatus === 'Active' ? 'Inactive' : 'Active';\n    await fetch(`/buildings/${id}/command`, {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ status: newStatus }),\n    });\n    setBuildings((prevBuildings) =>\n      prevBuildings.map((b) =>\n        b.id === id ? { ...b, status: newStatus } : b\n      )\n    );\n  };\n\n  const handleTemperatureChange = async (id: number, newTemperature: number) => {\n    await fetch(`/buildings/${id}/command`, {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ temperature: newTemperature }),\n    });\n    setBuildings((prevBuildings) =>\n      prevBuildings.map((b) =>\n        b.id === id ? { ...b, temperature: newTemperature } : b\n      )\n    );\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => (\n        <div key={building.id} className=\"building-card\">\n          <h3>{building.name}</h3>\n          <p>Temperature: {building.temperature}Â°C</p>\n          <p>Status: {building.status}</p>\n          <div className=\"button-group\">\n            <button\n              className=\"btn-primary\"\n              onClick={() => onEdit(building)}\n            >\n              Edit\n            </button>\n            <button\n              className=\"btn-secondary\"\n              onClick={() => handleDelete(building.id)}\n            >\n              Delete\n            </button>\n          </div>\n          <div className=\"button-group\">\n            <button\n              className=\"btn-status\"\n              onClick={() => handleStatusChange(building.id, building.status)}\n            >\n              Toggle Status\n            </button>\n            <input\n              type=\"number\"\n              className=\"temperature-input\"\n              value={building.temperature}\n              onChange={(e) =>\n                handleTemperatureChange(building.id, Number(e.target.value))\n              }\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
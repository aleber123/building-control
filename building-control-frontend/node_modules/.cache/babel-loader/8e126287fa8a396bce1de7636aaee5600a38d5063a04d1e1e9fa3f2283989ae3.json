{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { updateBuilding, deleteBuilding } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  _s();\n  const [temperatureInputs, setTemperatureInputs] = useState({});\n  const handleDelete = async id => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter(building => building.id !== id));\n  };\n  const handleTemperatureUpdate = async building => {\n    const newTemperature = temperatureInputs[building.id] || building.temperature;\n    const updatedBuilding = {\n      ...building,\n      temperature: newTemperature\n    };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n    setTemperatureInputs(prev => ({\n      ...prev,\n      [building.id]: newTemperature\n    }));\n  };\n  const handleStatusToggle = async building => {\n    const updatedStatus = building.status === 'Active' ? 'Inactive' : 'Active';\n    const updatedBuilding = {\n      ...building,\n      status: updatedStatus\n    };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: buildings.map(building => {\n      var _temperatureInputs$bu;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"building-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: building.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", building.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Temperature: \", building.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (_temperatureInputs$bu = temperatureInputs[building.id]) !== null && _temperatureInputs$bu !== void 0 ? _temperatureInputs$bu : building.temperature,\n            onChange: e => setTemperatureInputs(prev => ({\n              ...prev,\n              [building.id]: Number(e.target.value)\n            })),\n            placeholder: \"New Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-update\",\n            onClick: () => handleTemperatureUpdate(building),\n            children: \"Set Temp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-box\",\n            children: building.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-box\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: building.status === 'Active',\n                onChange: () => handleStatusToggle(building)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: () => onEdit(building),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: () => handleDelete(building.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, building.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingList, \"C5nQmKCln0OUbG/VvSBYlDuQyzU=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useState","updateBuilding","deleteBuilding","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","temperatureInputs","setTemperatureInputs","handleDelete","id","filter","building","handleTemperatureUpdate","newTemperature","temperature","updatedBuilding","map","b","prev","handleStatusToggle","updatedStatus","status","className","children","_temperatureInputs$bu","name","fileName","_jsxFileName","lineNumber","columnNumber","location","type","value","onChange","e","Number","target","placeholder","onClick","checked","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { updateBuilding, deleteBuilding } from '../services/api';\nimport { Building } from '../types/types';\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  const [temperatureInputs, setTemperatureInputs] = useState<Record<number, number>>({});\n\n  const handleDelete = async (id: number) => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter((building) => building.id !== id));\n  };\n\n  const handleTemperatureUpdate = async (building: Building) => {\n    const newTemperature = temperatureInputs[building.id] || building.temperature;\n    const updatedBuilding = { ...building, temperature: newTemperature };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n    setTemperatureInputs((prev) => ({ ...prev, [building.id]: newTemperature }));\n  };\n\n  const handleStatusToggle = async (building: Building) => {\n    const updatedStatus = building.status === 'Active' ? 'Inactive' : 'Active';\n    const updatedBuilding = { ...building, status: updatedStatus };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => (\n        <div key={building.id} className=\"building-card\">\n          <h3>{building.name}</h3>\n          <p>Location: {building.location}</p>\n          <p>Current Temperature: {building.temperature}Â°C</p>\n          <div className=\"temperature-controls\">\n            <input\n              type=\"number\"\n              value={temperatureInputs[building.id] ?? building.temperature}\n              onChange={(e) =>\n                setTemperatureInputs((prev) => ({\n                  ...prev,\n                  [building.id]: Number(e.target.value),\n                }))\n              }\n              placeholder=\"New Temperature\"\n            />\n            <button\n              className=\"btn-update\"\n              onClick={() => handleTemperatureUpdate(building)}\n            >\n              Set Temp\n            </button>\n          </div>\n          <div className=\"switch-container\">\n            <div className=\"status-box\">{building.status}</div>\n            <div className=\"toggle-box\">\n              <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  checked={building.status === 'Active'}\n                  onChange={() => handleStatusToggle(building)}\n                />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n          <div className=\"button-group\">\n            <button className=\"btn-primary\" onClick={() => onEdit(building)}>\n              Edit\n            </button>\n            <button className=\"btn-secondary\" onClick={() => handleDelete(building.id)}>\n              Delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
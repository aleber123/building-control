{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { deleteBuilding, updateBuilding } from '../services/api';\nimport './style.css'; // Ensure your global CSS is applied\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  _s();\n  const [temperature, setTemperature] = useState(null);\n  const handleDelete = async id => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter(building => building.id !== id));\n  };\n  const toggleStatus = async building => {\n    const updatedStatus = building.status === 'Active' ? 'Inactive' : 'Active';\n    const updatedBuilding = {\n      ...building,\n      status: updatedStatus\n    };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  const handleTemperatureUpdate = async building => {\n    if (temperature !== null) {\n      const updatedBuilding = {\n        ...building,\n        temperature\n      };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n      setTemperature(null); // Reset after update\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: building.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", building.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", building.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", building.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => onEdit(building),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-secondary\",\n          onClick: () => handleDelete(building.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Commands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-toggle\",\n          onClick: () => toggleStatus(building),\n          children: \"Toggle Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Adjust Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"New Temperature\",\n          value: temperature || '',\n          onChange: e => setTemperature(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-update\",\n          onClick: () => handleTemperatureUpdate(building),\n          children: \"Update Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, building.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingList, \"kvAau9UMlm+V/XThBpyXZW8MLJE=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useState","deleteBuilding","updateBuilding","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","temperature","setTemperature","handleDelete","id","filter","building","toggleStatus","updatedStatus","status","updatedBuilding","map","b","handleTemperatureUpdate","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","location","onClick","type","placeholder","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchBuildings, deleteBuilding, updateBuilding } from '../services/api';\nimport { Building } from '../types/types';\nimport './style.css'; // Ensure your global CSS is applied\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  const [temperature, setTemperature] = useState<number | null>(null);\n\n  const handleDelete = async (id: number) => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter((building) => building.id !== id));\n  };\n\n  const toggleStatus = async (building: Building) => {\n    const updatedStatus = building.status === 'Active' ? 'Inactive' : 'Active';\n    const updatedBuilding = { ...building, status: updatedStatus };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n  };\n\n  const handleTemperatureUpdate = async (building: Building) => {\n    if (temperature !== null) {\n      const updatedBuilding = { ...building, temperature };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n      setTemperature(null); // Reset after update\n    }\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => (\n        <div key={building.id} className=\"building-card\">\n          <h3>{building.name}</h3>\n          <p>Temperature: {building.temperature}Â°C</p>\n          <p>Location: {building.location}</p>\n          <p>Status: {building.status}</p>\n          <div className=\"button-group\">\n            <button className=\"btn-primary\" onClick={() => onEdit(building)}>\n              Edit\n            </button>\n            <button className=\"btn-secondary\" onClick={() => handleDelete(building.id)}>\n              Delete\n            </button>\n          </div>\n          <div className=\"command-interface\">\n            <h3>Commands</h3>\n            <button\n              className=\"btn-toggle\"\n              onClick={() => toggleStatus(building)}\n            >\n              Toggle Status\n            </button>\n            <label>Adjust Temperature</label>\n            <input\n              type=\"number\"\n              placeholder=\"New Temperature\"\n              value={temperature || ''}\n              onChange={(e) => setTemperature(Number(e.target.value))}\n            />\n            <button\n              className=\"btn-update\"\n              onClick={() => handleTemperatureUpdate(building)}\n            >\n              Update Temperature\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { deleteBuilding, updateBuilding } from '../services/api';\nimport '../styles.css'; // Ensure your global CSS is applied\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  _s();\n  const [temperatureInputs, setTemperatureInputs] = useState({});\n  const handleDelete = async id => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter(building => building.id !== id));\n  };\n  const handleStatusUpdate = async (building, status) => {\n    const updatedBuilding = {\n      ...building,\n      status\n    };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  const handleTemperatureUpdate = async building => {\n    const newTemperature = parseFloat(temperatureInputs[building.id] || '');\n    if (!isNaN(newTemperature)) {\n      const updatedBuilding = {\n        ...building,\n        temperature: newTemperature\n      };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n      setTemperatureInputs(prev => ({\n        ...prev,\n        [building.id]: ''\n      })); // Reset input after update\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: building.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", building.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", building.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", building.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => onEdit(building),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-secondary\",\n          onClick: () => handleDelete(building.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-temperature\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn-toggle ${building.status === 'Active' ? 'active' : ''}`,\n          onClick: () => handleStatusUpdate(building, 'Active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn-toggle ${building.status === 'Inactive' ? 'inactive' : ''}`,\n          onClick: () => handleStatusUpdate(building, 'Inactive'),\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"New Temperature\",\n          value: temperatureInputs[building.id] || '',\n          onChange: e => setTemperatureInputs(prev => ({\n            ...prev,\n            [building.id]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-update\",\n          onClick: () => handleTemperatureUpdate(building),\n          children: \"Update Temp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, building.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingList, \"C5nQmKCln0OUbG/VvSBYlDuQyzU=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useState","deleteBuilding","updateBuilding","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","temperatureInputs","setTemperatureInputs","handleDelete","id","filter","building","handleStatusUpdate","status","updatedBuilding","map","b","handleTemperatureUpdate","newTemperature","parseFloat","isNaN","temperature","prev","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","location","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchBuildings, deleteBuilding, updateBuilding } from '../services/api';\nimport { Building } from '../types/types';\nimport '../styles.css'; // Ensure your global CSS is applied\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  const [temperatureInputs, setTemperatureInputs] = useState<{ [key: number]: string }>({});\n\n  const handleDelete = async (id: number) => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter((building) => building.id !== id));\n  };\n\n  const handleStatusUpdate = async (building: Building, status: string) => {\n    const updatedBuilding = { ...building, status };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n  };\n\n  const handleTemperatureUpdate = async (building: Building) => {\n    const newTemperature = parseFloat(temperatureInputs[building.id] || '');\n    if (!isNaN(newTemperature)) {\n      const updatedBuilding = { ...building, temperature: newTemperature };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n      setTemperatureInputs((prev) => ({ ...prev, [building.id]: '' })); // Reset input after update\n    }\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => (\n        <div key={building.id} className=\"building-card\">\n          <h3>{building.name}</h3>\n          <p>Temperature: {building.temperature}Â°C</p>\n          <p>Location: {building.location}</p>\n          <p>Status: {building.status}</p>\n          <div className=\"button-group\">\n            <button className=\"btn-primary\" onClick={() => onEdit(building)}>\n              Edit\n            </button>\n            <button className=\"btn-secondary\" onClick={() => handleDelete(building.id)}>\n              Delete\n            </button>\n          </div>\n          <div className=\"status-temperature\">\n            <button\n              className={`btn-toggle ${building.status === 'Active' ? 'active' : ''}`}\n              onClick={() => handleStatusUpdate(building, 'Active')}\n            >\n              Active\n            </button>\n            <button\n              className={`btn-toggle ${building.status === 'Inactive' ? 'inactive' : ''}`}\n              onClick={() => handleStatusUpdate(building, 'Inactive')}\n            >\n              Inactive\n            </button>\n            <input\n              type=\"number\"\n              placeholder=\"New Temperature\"\n              value={temperatureInputs[building.id] || ''}\n              onChange={(e) =>\n                setTemperatureInputs((prev) => ({ ...prev, [building.id]: e.target.value }))\n              }\n            />\n            <button\n              className=\"btn-update\"\n              onClick={() => handleTemperatureUpdate(building)}\n            >\n              Update Temp\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
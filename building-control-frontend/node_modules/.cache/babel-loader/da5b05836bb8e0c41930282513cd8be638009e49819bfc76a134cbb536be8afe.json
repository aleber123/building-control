{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingForm.tsx\";\nimport React, { useState } from 'react';\nimport './BuildingList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  var _s = $RefreshSig$();\n  const handleStatusUpdate = (building, status) => {\n    const updatedBuilding = {\n      ...building,\n      status\n    };\n    setBuildings(prev => prev.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  const handleTemperatureUpdate = (building, newTemperature) => {\n    const updatedBuilding = {\n      ...building,\n      temperature: newTemperature\n    };\n    setBuildings(prev => prev.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: _s(buildings.map(_s(building => {\n      _s();\n      const [temperature, setTemperature] = useState(building.temperature);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"building-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: building.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", building.status || 'Inactive']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Temperature: \", building.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-active\",\n            onClick: () => handleStatusUpdate(building, 'Active'),\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-inactive\",\n            onClick: () => handleStatusUpdate(building, 'Inactive'),\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: temperature || '',\n            onChange: e => setTemperature(Number(e.target.value)),\n            placeholder: \"New Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-update\",\n            onClick: () => handleTemperatureUpdate(building, Number(temperature)),\n            children: \"Update Temp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, building.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }, \"6s/1KgPwW9cbn//0yEZ8TtslHt0=\")), \"6s/1KgPwW9cbn//0yEZ8TtslHt0=\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","$RefreshSig$","handleStatusUpdate","building","status","updatedBuilding","prev","map","b","id","handleTemperatureUpdate","newTemperature","temperature","className","children","setTemperature","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","Number","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Building } from '../types/types';\nimport './BuildingList.css';\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  const handleStatusUpdate = (building: Building, status: string) => {\n    const updatedBuilding = { ...building, status };\n    setBuildings((prev) =>\n      prev.map((b) => (b.id === building.id ? updatedBuilding : b))\n    );\n  };\n\n  const handleTemperatureUpdate = (building: Building, newTemperature: number) => {\n    const updatedBuilding = { ...building, temperature: newTemperature };\n    setBuildings((prev) =>\n      prev.map((b) => (b.id === building.id ? updatedBuilding : b))\n    );\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => {\n        const [temperature, setTemperature] = useState<number | ''>(building.temperature);\n\n        return (\n          <div key={building.id} className=\"building-card\">\n            <h3>{building.name}</h3>\n            <p>Status: {building.status || 'Inactive'}</p>\n            <p>Current Temperature: {building.temperature}Â°C</p>\n\n            <div className=\"status-temperature\">\n              <button\n                className=\"btn-active\"\n                onClick={() => handleStatusUpdate(building, 'Active')}\n              >\n                Active\n              </button>\n              <button\n                className=\"btn-inactive\"\n                onClick={() => handleStatusUpdate(building, 'Inactive')}\n              >\n                Inactive\n              </button>\n              <input\n                type=\"number\"\n                value={temperature || ''}\n                onChange={(e) => setTemperature(Number(e.target.value))}\n                placeholder=\"New Temperature\"\n              />\n              <button\n                className=\"btn-update\"\n                onClick={() => handleTemperatureUpdate(building, Number(temperature))}\n              >\n                Update Temp\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { deleteBuilding, updateBuilding } from '../services/api';\nimport '../styles.css'; // Ensure your global CSS is applied\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildingList = ({\n  buildings,\n  setBuildings,\n  onEdit\n}) => {\n  _s();\n  const [temperatureInputs, setTemperatureInputs] = useState({});\n  const handleDelete = async id => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter(building => building.id !== id));\n  };\n  const handleStatusUpdate = async (building, status) => {\n    const updatedBuilding = {\n      ...building,\n      status\n    };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n  };\n  const handleTemperatureUpdate = async building => {\n    const newTemperature = temperatureInputs[building.id];\n    if (newTemperature !== undefined) {\n      const updatedBuilding = {\n        ...building,\n        temperature: newTemperature\n      };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map(b => b.id === building.id ? updatedBuilding : b));\n      setTemperatureInputs(prev => ({\n        ...prev,\n        [building.id]: ''\n      })); // Reset input after update\n    }\n  };\n  const handleInputChange = (id, value) => {\n    setTemperatureInputs(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"building-list\",\n    children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: building.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", building.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", building.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", building.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => onEdit(building),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-secondary\",\n          onClick: () => handleDelete(building.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-temperature\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn-toggle ${building.status === 'Active' ? 'active' : ''}`,\n          onClick: () => handleStatusUpdate(building, 'Active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn-toggle ${building.status === 'Inactive' ? 'inactive' : ''}`,\n          onClick: () => handleStatusUpdate(building, 'Inactive'),\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"New Temperature\",\n          value: temperatureInputs[building.id] || building.temperature || '',\n          onChange: e => handleInputChange(building.id, Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-update\",\n          onClick: () => handleTemperatureUpdate(building),\n          children: \"Update Temp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, building.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingList, \"C5nQmKCln0OUbG/VvSBYlDuQyzU=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useState","deleteBuilding","updateBuilding","jsxDEV","_jsxDEV","BuildingList","buildings","setBuildings","onEdit","_s","temperatureInputs","setTemperatureInputs","handleDelete","id","filter","building","handleStatusUpdate","status","updatedBuilding","map","b","handleTemperatureUpdate","newTemperature","undefined","temperature","prev","handleInputChange","value","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","location","onClick","type","placeholder","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/components/BuildingList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchBuildings, deleteBuilding, updateBuilding } from '../services/api';\nimport { Building } from '../types/types';\nimport '../styles.css'; // Ensure your global CSS is applied\n\ninterface BuildingListProps {\n  buildings: Building[];\n  setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n  onEdit: (building: Building) => void;\n}\n\nconst BuildingList: React.FC<BuildingListProps> = ({ buildings, setBuildings, onEdit }) => {\n  const [temperatureInputs, setTemperatureInputs] = useState<{ [key: number]: number | '' }>({});\n\n  const handleDelete = async (id: number) => {\n    await deleteBuilding(id);\n    setBuildings(buildings.filter((building) => building.id !== id));\n  };\n\n  const handleStatusUpdate = async (building: Building, status: string) => {\n    const updatedBuilding = { ...building, status };\n    await updateBuilding(building.id, updatedBuilding);\n    setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n  };\n\n  const handleTemperatureUpdate = async (building: Building) => {\n    const newTemperature = temperatureInputs[building.id];\n    if (newTemperature !== undefined) {\n      const updatedBuilding = { ...building, temperature: newTemperature };\n      await updateBuilding(building.id, updatedBuilding);\n      setBuildings(buildings.map((b) => (b.id === building.id ? updatedBuilding : b)));\n      setTemperatureInputs((prev) => ({ ...prev, [building.id]: '' })); // Reset input after update\n    }\n  };\n\n  const handleInputChange = (id: number, value: number) => {\n    setTemperatureInputs((prev) => ({ ...prev, [id]: value }));\n  };\n\n  return (\n    <div className=\"building-list\">\n      {buildings.map((building) => (\n        <div key={building.id} className=\"building-card\">\n          <h3>{building.name}</h3>\n          <p>Temperature: {building.temperature}Â°C</p>\n          <p>Location: {building.location}</p>\n          <p>Status: {building.status}</p>\n          <div className=\"button-group\">\n            <button className=\"btn-primary\" onClick={() => onEdit(building)}>\n              Edit\n            </button>\n            <button className=\"btn-secondary\" onClick={() => handleDelete(building.id)}>\n              Delete\n            </button>\n          </div>\n          <div className=\"status-temperature\">\n            <button\n              className={`btn-toggle ${building.status === 'Active' ? 'active' : ''}`}\n              onClick={() => handleStatusUpdate(building, 'Active')}\n            >\n              Active\n            </button>\n            <button\n              className={`btn-toggle ${building.status === 'Inactive' ? 'inactive' : ''}`}\n              onClick={() => handleStatusUpdate(building, 'Inactive')}\n            >\n              Inactive\n            </button>\n            <input\n              type=\"number\"\n              placeholder=\"New Temperature\"\n              value={temperatureInputs[building.id] || building.temperature || ''}\n              onChange={(e) => handleInputChange(building.id, Number(e.target.value))}\n            />\n            <button\n              className=\"btn-update\"\n              onClick={() => handleTemperatureUpdate(building)}\n            >\n              Update Temp\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BuildingList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAyBC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAEhF,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQxB,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAiC,CAAC,CAAC,CAAC;EAE9F,MAAMY,YAAY,GAAG,MAAOC,EAAU,IAAK;IACzC,MAAMZ,cAAc,CAACY,EAAE,CAAC;IACxBN,YAAY,CAACD,SAAS,CAACQ,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,MAAMG,kBAAkB,GAAG,MAAAA,CAAOD,QAAkB,EAAEE,MAAc,KAAK;IACvE,MAAMC,eAAe,GAAG;MAAE,GAAGH,QAAQ;MAAEE;IAAO,CAAC;IAC/C,MAAMf,cAAc,CAACa,QAAQ,CAACF,EAAE,EAAEK,eAAe,CAAC;IAClDX,YAAY,CAACD,SAAS,CAACa,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACP,EAAE,KAAKE,QAAQ,CAACF,EAAE,GAAGK,eAAe,GAAGE,CAAE,CAAC,CAAC;EAClF,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAON,QAAkB,IAAK;IAC5D,MAAMO,cAAc,GAAGZ,iBAAiB,CAACK,QAAQ,CAACF,EAAE,CAAC;IACrD,IAAIS,cAAc,KAAKC,SAAS,EAAE;MAChC,MAAML,eAAe,GAAG;QAAE,GAAGH,QAAQ;QAAES,WAAW,EAAEF;MAAe,CAAC;MACpE,MAAMpB,cAAc,CAACa,QAAQ,CAACF,EAAE,EAAEK,eAAe,CAAC;MAClDX,YAAY,CAACD,SAAS,CAACa,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACP,EAAE,KAAKE,QAAQ,CAACF,EAAE,GAAGK,eAAe,GAAGE,CAAE,CAAC,CAAC;MAChFT,oBAAoB,CAAEc,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACV,QAAQ,CAACF,EAAE,GAAG;MAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAACb,EAAU,EAAEc,KAAa,KAAK;IACvDhB,oBAAoB,CAAEc,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACZ,EAAE,GAAGc;IAAM,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BvB,SAAS,CAACa,GAAG,CAAEJ,QAAQ,iBACtBX,OAAA;MAAuBwB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9CzB,OAAA;QAAAyB,QAAA,EAAKd,QAAQ,CAACe;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB9B,OAAA;QAAAyB,QAAA,GAAG,eAAa,EAACd,QAAQ,CAACS,WAAW,EAAC,OAAE;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5C9B,OAAA;QAAAyB,QAAA,GAAG,YAAU,EAACd,QAAQ,CAACoB,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC9B,OAAA;QAAAyB,QAAA,GAAG,UAAQ,EAACd,QAAQ,CAACE,MAAM;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC9B,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BzB,OAAA;UAAQwB,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEA,CAAA,KAAM5B,MAAM,CAACO,QAAQ,CAAE;UAAAc,QAAA,EAAC;QAEjE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9B,OAAA;UAAQwB,SAAS,EAAC,eAAe;UAACQ,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACG,QAAQ,CAACF,EAAE,CAAE;UAAAgB,QAAA,EAAC;QAE5E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN9B,OAAA;QAAKwB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCzB,OAAA;UACEwB,SAAS,EAAE,cAAcb,QAAQ,CAACE,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;UACxEmB,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACD,QAAQ,EAAE,QAAQ,CAAE;UAAAc,QAAA,EACvD;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9B,OAAA;UACEwB,SAAS,EAAE,cAAcb,QAAQ,CAACE,MAAM,KAAK,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UAC5EmB,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACD,QAAQ,EAAE,UAAU,CAAE;UAAAc,QAAA,EACzD;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9B,OAAA;UACEiC,IAAI,EAAC,QAAQ;UACbC,WAAW,EAAC,iBAAiB;UAC7BX,KAAK,EAAEjB,iBAAiB,CAACK,QAAQ,CAACF,EAAE,CAAC,IAAIE,QAAQ,CAACS,WAAW,IAAI,EAAG;UACpEe,QAAQ,EAAGC,CAAC,IAAKd,iBAAiB,CAACX,QAAQ,CAACF,EAAE,EAAE4B,MAAM,CAACD,CAAC,CAACE,MAAM,CAACf,KAAK,CAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACF9B,OAAA;UACEwB,SAAS,EAAC,YAAY;UACtBQ,OAAO,EAAEA,CAAA,KAAMf,uBAAuB,CAACN,QAAQ,CAAE;UAAAc,QAAA,EAClD;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,GAtCEnB,QAAQ,CAACF,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuChB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1EIJ,YAAyC;AAAAsC,EAAA,GAAzCtC,YAAyC;AA4E/C,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
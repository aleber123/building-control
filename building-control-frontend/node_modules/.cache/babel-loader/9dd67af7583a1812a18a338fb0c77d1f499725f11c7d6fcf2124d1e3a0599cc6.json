{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BuildingList from './components/BuildingList';\nimport BuildingForm from './components/BuildingForm';\nimport { fetchBuildings } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [buildings, setBuildings] = useState([]); // Manage buildings data here\n\n  // Load buildings initially\n  const loadBuildings = async () => {\n    const data = await fetchBuildings();\n    setBuildings(data);\n  };\n  useEffect(() => {\n    loadBuildings();\n  }, []);\n  const handleBuildingAdded = () => {\n    loadBuildings(); // Reload buildings after a new one is added\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Building Control System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildingForm, {\n      onBuildingAdded: handleBuildingAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildingList, {\n      buildings: buildings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ibxrPMorhdlcOntg/fA7wa8XwVY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BuildingList","BuildingForm","fetchBuildings","jsxDEV","_jsxDEV","App","_s","buildings","setBuildings","loadBuildings","data","handleBuildingAdded","children","fileName","_jsxFileName","lineNumber","columnNumber","onBuildingAdded","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BuildingList from './components/BuildingList';\nimport BuildingForm from './components/BuildingForm';\nimport { fetchBuildings } from './services/api';\n\nconst App: React.FC = () => {\n  const [buildings, setBuildings] = useState([]); // Manage buildings data here\n\n  // Load buildings initially\n  const loadBuildings = async () => {\n    const data = await fetchBuildings();\n    setBuildings(data);\n  };\n\n  useEffect(() => {\n    loadBuildings();\n  }, []);\n\n  const handleBuildingAdded = () => {\n    loadBuildings(); // Reload buildings after a new one is added\n  };\n\n  return (\n    <div>\n      <h1>Building Control System</h1>\n      <BuildingForm onBuildingAdded={handleBuildingAdded} />\n      <BuildingList buildings={buildings} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAAC,CAAC;IACnCM,YAAY,CAACE,IAAI,CAAC;EACpB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCF,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCZ,OAAA,CAACH,YAAY;MAACgB,eAAe,EAAEN;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDZ,OAAA,CAACJ,YAAY;MAACO,SAAS,EAAEA;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACV,EAAA,CAxBID,GAAa;AAAAa,EAAA,GAAbb,GAAa;AA0BnB,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
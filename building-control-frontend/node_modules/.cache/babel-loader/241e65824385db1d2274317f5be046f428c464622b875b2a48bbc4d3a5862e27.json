{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BuildingForm from './components/BuildingForm';\nimport BuildingList from './components/BuildingList';\nimport EditBuildingForm from './components/EditBuildingForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [editingBuilding, setEditingBuilding] = useState(null);\n  const addBuildingToList = newBuilding => {\n    setBuildings(prevBuildings => [...prevBuildings, newBuilding]);\n  };\n  const updateBuildingInList = updatedBuilding => {\n    setBuildings(prevBuildings => prevBuildings.map(b => b.id === updatedBuilding.id ? updatedBuilding : b));\n    setEditingBuilding(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Building Control System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildingForm, {\n      onBuildingAdded: addBuildingToList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), editingBuilding ? /*#__PURE__*/_jsxDEV(EditBuildingForm, {\n      building: editingBuilding,\n      onBuildingUpdated: updateBuildingInList,\n      onCancel: () => setEditingBuilding(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BuildingList, {\n      buildings: buildings,\n      setBuildings: setBuildings,\n      onEdit: setEditingBuilding // Pass the required onEdit prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zWnM+G/zM5r+9fJJNSPQKzjcY9I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BuildingForm","BuildingList","EditBuildingForm","jsxDEV","_jsxDEV","App","_s","buildings","setBuildings","editingBuilding","setEditingBuilding","addBuildingToList","newBuilding","prevBuildings","updateBuildingInList","updatedBuilding","map","b","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBuildingAdded","building","onBuildingUpdated","onCancel","onEdit","_c","$RefreshReg$"],"sources":["/Users/alexanderbergqvist/Desktop/building-control/building-control-frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BuildingForm from './components/BuildingForm';\nimport BuildingList from './components/BuildingList';\nimport EditBuildingForm from './components/EditBuildingForm';\nimport { Building } from './types/types';\n\nconst App: React.FC = () => {\n  const [buildings, setBuildings] = useState<Building[]>([]);\n  const [editingBuilding, setEditingBuilding] = useState<Building | null>(null);\n\n  const addBuildingToList = (newBuilding: Building) => {\n    setBuildings((prevBuildings) => [...prevBuildings, newBuilding]);\n  };\n\n  const updateBuildingInList = (updatedBuilding: Building) => {\n    setBuildings((prevBuildings) =>\n      prevBuildings.map((b) => (b.id === updatedBuilding.id ? updatedBuilding : b))\n    );\n    setEditingBuilding(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Building Control System</h1>\n      <BuildingForm onBuildingAdded={addBuildingToList} />\n      {editingBuilding ? (\n        <EditBuildingForm\n          building={editingBuilding}\n          onBuildingUpdated={updateBuildingInList}\n          onCancel={() => setEditingBuilding(null)}\n        />\n      ) : (\n        <BuildingList\n          buildings={buildings}\n          setBuildings={setBuildings}\n          onEdit={setEditingBuilding} // Pass the required onEdit prop\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7D,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAkB,IAAI,CAAC;EAE7E,MAAMY,iBAAiB,GAAIC,WAAqB,IAAK;IACnDJ,YAAY,CAAEK,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAED,WAAW,CAAC,CAAC;EAClE,CAAC;EAED,MAAME,oBAAoB,GAAIC,eAAyB,IAAK;IAC1DP,YAAY,CAAEK,aAAa,IACzBA,aAAa,CAACG,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKH,eAAe,CAACG,EAAE,GAAGH,eAAe,GAAGE,CAAE,CAC9E,CAAC;IACDP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhB,OAAA;MAAAgB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCpB,OAAA,CAACJ,YAAY;MAACyB,eAAe,EAAEd;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnDf,eAAe,gBACdL,OAAA,CAACF,gBAAgB;MACfwB,QAAQ,EAAEjB,eAAgB;MAC1BkB,iBAAiB,EAAEb,oBAAqB;MACxCc,QAAQ,EAAEA,CAAA,KAAMlB,kBAAkB,CAAC,IAAI;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,gBAEFpB,OAAA,CAACH,YAAY;MACXM,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BqB,MAAM,EAAEnB,kBAAmB,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlCID,GAAa;AAAAyB,EAAA,GAAbzB,GAAa;AAoCnB,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}